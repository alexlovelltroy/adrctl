name: Test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        go-version: ['stable', 'oldstable']
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Get dependencies
      run: go mod download

    - name: Run tests
      run: go test -v ./...

    - name: Build
      run: go build -v ./cmd/adrctl

    - name: Test CLI (Unix)
      if: runner.os != 'Windows'
      run: |
        ./adrctl --help
        mkdir -p test-adrs
        ./adrctl init --dir test-adrs
        ./adrctl new "Test ADR" --dir test-adrs
        ./adrctl index --out test-adrs/index.md



  build-snapshot:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 'stable'

    - name: Run GoReleaser (snapshot)
      uses: goreleaser/goreleaser-action@v5
      with:
        distribution: goreleaser
        version: latest
        args: build --snapshot --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}